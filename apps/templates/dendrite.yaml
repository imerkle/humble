{{- if .Values.dendrite.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-dendrite
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
  destination:
    name: in-cluster
    namespace: {{ .Values.argocd.project }}
  source:
    chart: dendrite
    repoURL: https://k8s-at-home.com/charts/
    targetRevision: 5.0.0
    helm:
      releaseName: dendrite
      values: |
        image:
          repository: matrixdotorg/dendrite-monolith

        dendrite:
          matrix_key_secret:
            # -- Create matrix_key secret using the keyBody below.
            create: false
            # -- New Key Body
            keyBody: ""
            # -- Use an existing secret
            existingSecret: "dendrite-signing-key"
            secretPath: signing.key
          database:
            max_open_conns: 100
            max_idle_conns: 2
            conn_max_lifetime: -1
          global:
            server_name: "dendrite.{{ .Values.global.domain }}"
            server_notices:
              enabled: true

        nats:
          enabled: true

          nats:
            jetstream:
              enabled: true
          exporter:
            enabled: true
            image: natsio/prometheus-nats-exporter:0.9.1
            serviceMonitor:
              enabled: true
        postgresql:
          enabled: true
          global:
            postgresql:
              postgresqlDatabase: "dendrite"
              postgresqlUsername: "dendrite"
              postgresqlPassword: "dendrite"

          persistence:
            enabled: true
            storageClass: "{{ .Values.dendrite.storageClass }}"
            accessModes:
              - ReadWriteOnce
            size: 10Gi

        ingress:
          main:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              external-dns.alpha.kubernetes.io/target: "humble-tunnel.{{ .Values.global.domain }}"
              external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
              nginx.ingress.kubernetes.io/proxy-body-size: 32m
            hosts:
              - host: &host dendrite.{{ .Values.global.domain }}
                paths:
                  - path: /
                    pathType: Prefix
            tls:
              - secretName: dendrite-tls-certificate
                hosts:
                  - *host
      
{{- end }}
